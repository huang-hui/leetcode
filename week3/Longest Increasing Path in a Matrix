class Solution:
    def longestIncreasingPath(self, matrix: List[List[int]]) -> int:
        if(not matrix):
            return(0)
        maxlength=1
        maxmat=[[0]*len(matrix[0]) for k in range(len(matrix))]
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                maxlength=max(maxlength,self.dfs(matrix,i,j,maxmat))
        return(maxlength)
    def dfs(self,matrix,i,j,maxmat):
        if(not maxmat[i][j]):
            maxmat[i][j]=1
            for x, y in ((i,j-1),(i,j+1),(i+1,j),(i-1,j)):
                if(x>=0 and x<len(matrix) and y>=0 and y<len(matrix[0]) and matrix[x][y]>matrix[i][j]):
                    maxmat[i][j]=max(maxmat[i][j],self.dfs(matrix,x,y,maxmat)+1)
        return(maxmat[i][j])
