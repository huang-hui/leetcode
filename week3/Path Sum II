# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def pathSum(self, root: TreeNode, sum: int) -> List[List[int]]:
        result=[]
        if(root is None):
            return(result)
        self.dfs(root,result,[],sum)
        return(result)
    def dfs(self,root,result,temp,target):
        if(not root.left and not root.right and target==root.val):
            temp.append(root.val)
            result.append(temp)
        if(root.left):
            self.dfs(root.left,result,temp+[root.val],target-root.val)
        if(root.right):
            self.dfs(root.right,result,temp+[root.val],target-root.val)
