class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        if(not obstacleGrid or len(obstacleGrid)==0 or len(obstacleGrid[0])==0):
            return(0)
        nrow,ncol=len(obstacleGrid),len(obstacleGrid[0])
        paths=[[0]*ncol for _ in range(nrow)]
        rowsum=0
        for i in range(nrow):
            rowsum+=obstacleGrid[i][0]
            paths[i][0]= 1 if rowsum==0 else 0
        colsum=0
        for j in range(ncol):
            colsum+=obstacleGrid[0][j]
            paths[0][j]= 1 if colsum==0 else 0 
        for i in range(1,nrow):
            for j in range(1,ncol):
                if(obstacleGrid[i][j]==1):
                    continue
                paths[i][j]=paths[i-1][j]+paths[i][j-1]
        return(paths[nrow-1][ncol-1])
        
